package br.com.semanticwot.pswot.cloud.ssn;

import br.com.semanticwot.pswot.cloud.ssn.impl.*;

import java.util.Collection;

import org.protege.owl.codegeneration.CodeGenerationFactory;
import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.FactoryHelper;
import org.protege.owl.codegeneration.impl.ProtegeJavaMapping;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.protege.owl.codegeneration.inference.SimpleInference;

import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;

/**
 * A class that serves as the entry point to the generated code providing access
 * to existing individuals in the ontology and the ability to create new individuals in the ontology.<p>
 * 
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: SSNFactory<br>
 * @version generated on Fri Mar 04 01:25:24 BRT 2016 by nailton
 */
public class SSNFactory implements CodeGenerationFactory {
    private OWLOntology ontology;
    private ProtegeJavaMapping javaMapping = new ProtegeJavaMapping();
    private FactoryHelper delegate;
    private CodeGenerationInference inference;

    public SSNFactory(OWLOntology ontology) {
	    this(ontology, new SimpleInference(ontology));
    }
    
    public SSNFactory(OWLOntology ontology, CodeGenerationInference inference) {
        this.ontology = ontology;
        this.inference = inference;
        javaMapping.initialize(ontology, inference);
        delegate = new FactoryHelper(ontology, inference);
    }

    public OWLOntology getOwlOntology() {
        return ontology;
    }
    
    public void saveOwlOntology() throws OWLOntologyStorageException {
        ontology.getOWLOntologyManager().saveOntology(ontology);
    }
    
    public void flushOwlReasoner() {
        delegate.flushOwlReasoner();
    }
    
    public boolean canAs(WrappedIndividual resource, Class<? extends WrappedIndividual> javaInterface) {
    	return javaMapping.canAs(resource, javaInterface);
    }
    
    public  <X extends WrappedIndividual> X as(WrappedIndividual resource, Class<? extends X> javaInterface) {
    	return javaMapping.as(resource, javaInterface);
    }
    
    public Class<?> getJavaInterfaceFromOwlClass(OWLClass cls) {
        return javaMapping.getJavaInterfaceFromOwlClass(cls);
    }
    
    public OWLClass getOwlClassFromJavaInterface(Class<?> javaInterface) {
	    return javaMapping.getOwlClassFromJavaInterface(javaInterface);
    }
    
    public CodeGenerationInference getInference() {
        return inference;
    }

    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Accuracy
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Accuracy", Accuracy.class, DefaultAccuracy.class);
    }

    /**
     * Creates an instance of type Accuracy.  Modifies the underlying ontology.
     */
    public Accuracy createAccuracy(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ACCURACY, DefaultAccuracy.class);
    }

    /**
     * Gets an instance of type Accuracy with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Accuracy getAccuracy(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ACCURACY, DefaultAccuracy.class);
    }

    /**
     * Gets all instances of Accuracy from the ontology.
     */
    public Collection<? extends Accuracy> getAllAccuracyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ACCURACY, DefaultAccuracy.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#BatteryLifetime
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#BatteryLifetime", Battery_Lifetime.class, DefaultBattery_Lifetime.class);
    }

    /**
     * Creates an instance of type Battery_Lifetime.  Modifies the underlying ontology.
     */
    public Battery_Lifetime createBattery_Lifetime(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_BATTERY_LIFETIME, DefaultBattery_Lifetime.class);
    }

    /**
     * Gets an instance of type Battery_Lifetime with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Battery_Lifetime getBattery_Lifetime(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_BATTERY_LIFETIME, DefaultBattery_Lifetime.class);
    }

    /**
     * Gets all instances of Battery_Lifetime from the ontology.
     */
    public Collection<? extends Battery_Lifetime> getAllBattery_LifetimeInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_BATTERY_LIFETIME, DefaultBattery_Lifetime.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Condition
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Condition", Condition.class, DefaultCondition.class);
    }

    /**
     * Creates an instance of type Condition.  Modifies the underlying ontology.
     */
    public Condition createCondition(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_CONDITION, DefaultCondition.class);
    }

    /**
     * Gets an instance of type Condition with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Condition getCondition(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_CONDITION, DefaultCondition.class);
    }

    /**
     * Gets all instances of Condition from the ontology.
     */
    public Collection<? extends Condition> getAllConditionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_CONDITION, DefaultCondition.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Deployment
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Deployment", Deployment.class, DefaultDeployment.class);
    }

    /**
     * Creates an instance of type Deployment.  Modifies the underlying ontology.
     */
    public Deployment createDeployment(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DEPLOYMENT, DefaultDeployment.class);
    }

    /**
     * Gets an instance of type Deployment with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Deployment getDeployment(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DEPLOYMENT, DefaultDeployment.class);
    }

    /**
     * Gets all instances of Deployment from the ontology.
     */
    public Collection<? extends Deployment> getAllDeploymentInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DEPLOYMENT, DefaultDeployment.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#DeploymentRelatedProcess
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#DeploymentRelatedProcess", Deployment_related_Process.class, DefaultDeployment_related_Process.class);
    }

    /**
     * Creates an instance of type Deployment_related_Process.  Modifies the underlying ontology.
     */
    public Deployment_related_Process createDeployment_related_Process(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DEPLOYMENT_RELATED_PROCESS, DefaultDeployment_related_Process.class);
    }

    /**
     * Gets an instance of type Deployment_related_Process with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Deployment_related_Process getDeployment_related_Process(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DEPLOYMENT_RELATED_PROCESS, DefaultDeployment_related_Process.class);
    }

    /**
     * Gets all instances of Deployment_related_Process from the ontology.
     */
    public Collection<? extends Deployment_related_Process> getAllDeployment_related_ProcessInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DEPLOYMENT_RELATED_PROCESS, DefaultDeployment_related_Process.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#DetectionLimit
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#DetectionLimit", Detection_limit.class, DefaultDetection_limit.class);
    }

    /**
     * Creates an instance of type Detection_limit.  Modifies the underlying ontology.
     */
    public Detection_limit createDetection_limit(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DETECTION_LIMIT, DefaultDetection_limit.class);
    }

    /**
     * Gets an instance of type Detection_limit with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Detection_limit getDetection_limit(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DETECTION_LIMIT, DefaultDetection_limit.class);
    }

    /**
     * Gets all instances of Detection_limit from the ontology.
     */
    public Collection<? extends Detection_limit> getAllDetection_limitInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DETECTION_LIMIT, DefaultDetection_limit.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Device
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Device", Device.class, DefaultDevice.class);
    }

    /**
     * Creates an instance of type Device.  Modifies the underlying ontology.
     */
    public Device createDevice(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DEVICE, DefaultDevice.class);
    }

    /**
     * Gets an instance of type Device with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Device getDevice(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DEVICE, DefaultDevice.class);
    }

    /**
     * Gets all instances of Device from the ontology.
     */
    public Collection<? extends Device> getAllDeviceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DEVICE, DefaultDevice.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Drift
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Drift", Drift.class, DefaultDrift.class);
    }

    /**
     * Creates an instance of type Drift.  Modifies the underlying ontology.
     */
    public Drift createDrift(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DRIFT, DefaultDrift.class);
    }

    /**
     * Gets an instance of type Drift with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Drift getDrift(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DRIFT, DefaultDrift.class);
    }

    /**
     * Gets all instances of Drift from the ontology.
     */
    public Collection<? extends Drift> getAllDriftInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DRIFT, DefaultDrift.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#FeatureOfInterest
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#FeatureOfInterest", Feature_of_Interest.class, DefaultFeature_of_Interest.class);
    }

    /**
     * Creates an instance of type Feature_of_Interest.  Modifies the underlying ontology.
     */
    public Feature_of_Interest createFeature_of_Interest(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FEATURE_OF_INTEREST, DefaultFeature_of_Interest.class);
    }

    /**
     * Gets an instance of type Feature_of_Interest with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Feature_of_Interest getFeature_of_Interest(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FEATURE_OF_INTEREST, DefaultFeature_of_Interest.class);
    }

    /**
     * Gets all instances of Feature_of_Interest from the ontology.
     */
    public Collection<? extends Feature_of_Interest> getAllFeature_of_InterestInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FEATURE_OF_INTEREST, DefaultFeature_of_Interest.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Frequency
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Frequency", Frequency.class, DefaultFrequency.class);
    }

    /**
     * Creates an instance of type Frequency.  Modifies the underlying ontology.
     */
    public Frequency createFrequency(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FREQUENCY, DefaultFrequency.class);
    }

    /**
     * Gets an instance of type Frequency with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Frequency getFrequency(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FREQUENCY, DefaultFrequency.class);
    }

    /**
     * Gets all instances of Frequency from the ontology.
     */
    public Collection<? extends Frequency> getAllFrequencyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FREQUENCY, DefaultFrequency.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Input
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Input", Input.class, DefaultInput.class);
    }

    /**
     * Creates an instance of type Input.  Modifies the underlying ontology.
     */
    public Input createInput(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_INPUT, DefaultInput.class);
    }

    /**
     * Gets an instance of type Input with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Input getInput(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_INPUT, DefaultInput.class);
    }

    /**
     * Gets all instances of Input from the ontology.
     */
    public Collection<? extends Input> getAllInputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_INPUT, DefaultInput.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Latency
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Latency", Latency.class, DefaultLatency.class);
    }

    /**
     * Creates an instance of type Latency.  Modifies the underlying ontology.
     */
    public Latency createLatency(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LATENCY, DefaultLatency.class);
    }

    /**
     * Gets an instance of type Latency with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Latency getLatency(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LATENCY, DefaultLatency.class);
    }

    /**
     * Gets all instances of Latency from the ontology.
     */
    public Collection<? extends Latency> getAllLatencyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LATENCY, DefaultLatency.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#MaintenanceSchedule
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#MaintenanceSchedule", Maintenance_Schedule.class, DefaultMaintenance_Schedule.class);
    }

    /**
     * Creates an instance of type Maintenance_Schedule.  Modifies the underlying ontology.
     */
    public Maintenance_Schedule createMaintenance_Schedule(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MAINTENANCE_SCHEDULE, DefaultMaintenance_Schedule.class);
    }

    /**
     * Gets an instance of type Maintenance_Schedule with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Maintenance_Schedule getMaintenance_Schedule(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MAINTENANCE_SCHEDULE, DefaultMaintenance_Schedule.class);
    }

    /**
     * Gets all instances of Maintenance_Schedule from the ontology.
     */
    public Collection<? extends Maintenance_Schedule> getAllMaintenance_ScheduleInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MAINTENANCE_SCHEDULE, DefaultMaintenance_Schedule.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#MeasurementCapability
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#MeasurementCapability", Measurement_Capability.class, DefaultMeasurement_Capability.class);
    }

    /**
     * Creates an instance of type Measurement_Capability.  Modifies the underlying ontology.
     */
    public Measurement_Capability createMeasurement_Capability(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MEASUREMENT_CAPABILITY, DefaultMeasurement_Capability.class);
    }

    /**
     * Gets an instance of type Measurement_Capability with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Measurement_Capability getMeasurement_Capability(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MEASUREMENT_CAPABILITY, DefaultMeasurement_Capability.class);
    }

    /**
     * Gets all instances of Measurement_Capability from the ontology.
     */
    public Collection<? extends Measurement_Capability> getAllMeasurement_CapabilityInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MEASUREMENT_CAPABILITY, DefaultMeasurement_Capability.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#MeasurementProperty
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#MeasurementProperty", Measurement__Property.class, DefaultMeasurement__Property.class);
    }

    /**
     * Creates an instance of type Measurement__Property.  Modifies the underlying ontology.
     */
    public Measurement__Property createMeasurement__Property(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MEASUREMENT__PROPERTY, DefaultMeasurement__Property.class);
    }

    /**
     * Gets an instance of type Measurement__Property with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Measurement__Property getMeasurement__Property(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MEASUREMENT__PROPERTY, DefaultMeasurement__Property.class);
    }

    /**
     * Gets all instances of Measurement__Property from the ontology.
     */
    public Collection<? extends Measurement__Property> getAllMeasurement__PropertyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MEASUREMENT__PROPERTY, DefaultMeasurement__Property.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#MeasurementRange
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#MeasurementRange", Measurement__Range.class, DefaultMeasurement__Range.class);
    }

    /**
     * Creates an instance of type Measurement__Range.  Modifies the underlying ontology.
     */
    public Measurement__Range createMeasurement__Range(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MEASUREMENT__RANGE, DefaultMeasurement__Range.class);
    }

    /**
     * Gets an instance of type Measurement__Range with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Measurement__Range getMeasurement__Range(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MEASUREMENT__RANGE, DefaultMeasurement__Range.class);
    }

    /**
     * Gets all instances of Measurement__Range from the ontology.
     */
    public Collection<? extends Measurement__Range> getAllMeasurement__RangeInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MEASUREMENT__RANGE, DefaultMeasurement__Range.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Observation
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Observation", Observation.class, DefaultObservation.class);
    }

    /**
     * Creates an instance of type Observation.  Modifies the underlying ontology.
     */
    public Observation createObservation(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_OBSERVATION, DefaultObservation.class);
    }

    /**
     * Gets an instance of type Observation with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Observation getObservation(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_OBSERVATION, DefaultObservation.class);
    }

    /**
     * Gets all instances of Observation from the ontology.
     */
    public Collection<? extends Observation> getAllObservationInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_OBSERVATION, DefaultObservation.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#ObservationValue
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#ObservationValue", Observation_Value.class, DefaultObservation_Value.class);
    }

    /**
     * Creates an instance of type Observation_Value.  Modifies the underlying ontology.
     */
    public Observation_Value createObservation_Value(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_OBSERVATION_VALUE, DefaultObservation_Value.class);
    }

    /**
     * Gets an instance of type Observation_Value with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Observation_Value getObservation_Value(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_OBSERVATION_VALUE, DefaultObservation_Value.class);
    }

    /**
     * Gets all instances of Observation_Value from the ontology.
     */
    public Collection<? extends Observation_Value> getAllObservation_ValueInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_OBSERVATION_VALUE, DefaultObservation_Value.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#OperatingPowerRange
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#OperatingPowerRange", Operating_Power_Range.class, DefaultOperating_Power_Range.class);
    }

    /**
     * Creates an instance of type Operating_Power_Range.  Modifies the underlying ontology.
     */
    public Operating_Power_Range createOperating_Power_Range(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_OPERATING_POWER_RANGE, DefaultOperating_Power_Range.class);
    }

    /**
     * Gets an instance of type Operating_Power_Range with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Operating_Power_Range getOperating_Power_Range(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_OPERATING_POWER_RANGE, DefaultOperating_Power_Range.class);
    }

    /**
     * Gets all instances of Operating_Power_Range from the ontology.
     */
    public Collection<? extends Operating_Power_Range> getAllOperating_Power_RangeInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_OPERATING_POWER_RANGE, DefaultOperating_Power_Range.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#OperatingProperty
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#OperatingProperty", Operating_Property.class, DefaultOperating_Property.class);
    }

    /**
     * Creates an instance of type Operating_Property.  Modifies the underlying ontology.
     */
    public Operating_Property createOperating_Property(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_OPERATING_PROPERTY, DefaultOperating_Property.class);
    }

    /**
     * Gets an instance of type Operating_Property with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Operating_Property getOperating_Property(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_OPERATING_PROPERTY, DefaultOperating_Property.class);
    }

    /**
     * Gets all instances of Operating_Property from the ontology.
     */
    public Collection<? extends Operating_Property> getAllOperating_PropertyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_OPERATING_PROPERTY, DefaultOperating_Property.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#OperatingRange
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#OperatingRange", Operating_Range.class, DefaultOperating_Range.class);
    }

    /**
     * Creates an instance of type Operating_Range.  Modifies the underlying ontology.
     */
    public Operating_Range createOperating_Range(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_OPERATING_RANGE, DefaultOperating_Range.class);
    }

    /**
     * Gets an instance of type Operating_Range with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Operating_Range getOperating_Range(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_OPERATING_RANGE, DefaultOperating_Range.class);
    }

    /**
     * Gets all instances of Operating_Range from the ontology.
     */
    public Collection<? extends Operating_Range> getAllOperating_RangeInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_OPERATING_RANGE, DefaultOperating_Range.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Output
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Output", Output.class, DefaultOutput.class);
    }

    /**
     * Creates an instance of type Output.  Modifies the underlying ontology.
     */
    public Output createOutput(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_OUTPUT, DefaultOutput.class);
    }

    /**
     * Gets an instance of type Output with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Output getOutput(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_OUTPUT, DefaultOutput.class);
    }

    /**
     * Gets all instances of Output from the ontology.
     */
    public Collection<? extends Output> getAllOutputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_OUTPUT, DefaultOutput.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Platform
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Platform", Platform.class, DefaultPlatform.class);
    }

    /**
     * Creates an instance of type Platform.  Modifies the underlying ontology.
     */
    public Platform createPlatform(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLATFORM, DefaultPlatform.class);
    }

    /**
     * Gets an instance of type Platform with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Platform getPlatform(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLATFORM, DefaultPlatform.class);
    }

    /**
     * Gets all instances of Platform from the ontology.
     */
    public Collection<? extends Platform> getAllPlatformInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLATFORM, DefaultPlatform.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Precision
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Precision", Precision.class, DefaultPrecision.class);
    }

    /**
     * Creates an instance of type Precision.  Modifies the underlying ontology.
     */
    public Precision createPrecision(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PRECISION, DefaultPrecision.class);
    }

    /**
     * Gets an instance of type Precision with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Precision getPrecision(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PRECISION, DefaultPrecision.class);
    }

    /**
     * Gets all instances of Precision from the ontology.
     */
    public Collection<? extends Precision> getAllPrecisionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PRECISION, DefaultPrecision.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Process
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Process", Process.class, DefaultProcess.class);
    }

    /**
     * Creates an instance of type Process.  Modifies the underlying ontology.
     */
    public Process createProcess(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PROCESS, DefaultProcess.class);
    }

    /**
     * Gets an instance of type Process with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Process getProcess(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PROCESS, DefaultProcess.class);
    }

    /**
     * Gets all instances of Process from the ontology.
     */
    public Collection<? extends Process> getAllProcessInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PROCESS, DefaultProcess.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Property
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Property", Property.class, DefaultProperty.class);
    }

    /**
     * Creates an instance of type Property.  Modifies the underlying ontology.
     */
    public Property createProperty(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PROPERTY, DefaultProperty.class);
    }

    /**
     * Gets an instance of type Property with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Property getProperty(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PROPERTY, DefaultProperty.class);
    }

    /**
     * Gets all instances of Property from the ontology.
     */
    public Collection<? extends Property> getAllPropertyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PROPERTY, DefaultProperty.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Resolution
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Resolution", Resolution.class, DefaultResolution.class);
    }

    /**
     * Creates an instance of type Resolution.  Modifies the underlying ontology.
     */
    public Resolution createResolution(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_RESOLUTION, DefaultResolution.class);
    }

    /**
     * Gets an instance of type Resolution with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Resolution getResolution(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_RESOLUTION, DefaultResolution.class);
    }

    /**
     * Gets all instances of Resolution from the ontology.
     */
    public Collection<? extends Resolution> getAllResolutionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_RESOLUTION, DefaultResolution.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#ResponseTime
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#ResponseTime", Response_time.class, DefaultResponse_time.class);
    }

    /**
     * Creates an instance of type Response_time.  Modifies the underlying ontology.
     */
    public Response_time createResponse_time(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_RESPONSE_TIME, DefaultResponse_time.class);
    }

    /**
     * Gets an instance of type Response_time with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Response_time getResponse_time(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_RESPONSE_TIME, DefaultResponse_time.class);
    }

    /**
     * Gets all instances of Response_time from the ontology.
     */
    public Collection<? extends Response_time> getAllResponse_timeInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_RESPONSE_TIME, DefaultResponse_time.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Selectivity
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Selectivity", Selectivity.class, DefaultSelectivity.class);
    }

    /**
     * Creates an instance of type Selectivity.  Modifies the underlying ontology.
     */
    public Selectivity createSelectivity(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SELECTIVITY, DefaultSelectivity.class);
    }

    /**
     * Gets an instance of type Selectivity with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Selectivity getSelectivity(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SELECTIVITY, DefaultSelectivity.class);
    }

    /**
     * Gets all instances of Selectivity from the ontology.
     */
    public Collection<? extends Selectivity> getAllSelectivityInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SELECTIVITY, DefaultSelectivity.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Sensing
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Sensing", Sensing.class, DefaultSensing.class);
    }

    /**
     * Creates an instance of type Sensing.  Modifies the underlying ontology.
     */
    public Sensing createSensing(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SENSING, DefaultSensing.class);
    }

    /**
     * Gets an instance of type Sensing with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Sensing getSensing(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SENSING, DefaultSensing.class);
    }

    /**
     * Gets all instances of Sensing from the ontology.
     */
    public Collection<? extends Sensing> getAllSensingInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SENSING, DefaultSensing.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#SensingDevice
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#SensingDevice", Sensing_Device.class, DefaultSensing_Device.class);
    }

    /**
     * Creates an instance of type Sensing_Device.  Modifies the underlying ontology.
     */
    public Sensing_Device createSensing_Device(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SENSING_DEVICE, DefaultSensing_Device.class);
    }

    /**
     * Gets an instance of type Sensing_Device with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Sensing_Device getSensing_Device(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SENSING_DEVICE, DefaultSensing_Device.class);
    }

    /**
     * Gets all instances of Sensing_Device from the ontology.
     */
    public Collection<? extends Sensing_Device> getAllSensing_DeviceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SENSING_DEVICE, DefaultSensing_Device.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Sensitivity
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Sensitivity", Sensitivity.class, DefaultSensitivity.class);
    }

    /**
     * Creates an instance of type Sensitivity.  Modifies the underlying ontology.
     */
    public Sensitivity createSensitivity(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SENSITIVITY, DefaultSensitivity.class);
    }

    /**
     * Gets an instance of type Sensitivity with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Sensitivity getSensitivity(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SENSITIVITY, DefaultSensitivity.class);
    }

    /**
     * Gets all instances of Sensitivity from the ontology.
     */
    public Collection<? extends Sensitivity> getAllSensitivityInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SENSITIVITY, DefaultSensitivity.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Sensor
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Sensor", Sensor.class, DefaultSensor.class);
    }

    /**
     * Creates an instance of type Sensor.  Modifies the underlying ontology.
     */
    public Sensor createSensor(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SENSOR, DefaultSensor.class);
    }

    /**
     * Gets an instance of type Sensor with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Sensor getSensor(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SENSOR, DefaultSensor.class);
    }

    /**
     * Gets all instances of Sensor from the ontology.
     */
    public Collection<? extends Sensor> getAllSensorInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SENSOR, DefaultSensor.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#SensorDataSheet
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#SensorDataSheet", Sensor_Data_Sheet.class, DefaultSensor_Data_Sheet.class);
    }

    /**
     * Creates an instance of type Sensor_Data_Sheet.  Modifies the underlying ontology.
     */
    public Sensor_Data_Sheet createSensor_Data_Sheet(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SENSOR_DATA_SHEET, DefaultSensor_Data_Sheet.class);
    }

    /**
     * Gets an instance of type Sensor_Data_Sheet with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Sensor_Data_Sheet getSensor_Data_Sheet(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SENSOR_DATA_SHEET, DefaultSensor_Data_Sheet.class);
    }

    /**
     * Gets all instances of Sensor_Data_Sheet from the ontology.
     */
    public Collection<? extends Sensor_Data_Sheet> getAllSensor_Data_SheetInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SENSOR_DATA_SHEET, DefaultSensor_Data_Sheet.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#SensorInput
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#SensorInput", Sensor_Input.class, DefaultSensor_Input.class);
    }

    /**
     * Creates an instance of type Sensor_Input.  Modifies the underlying ontology.
     */
    public Sensor_Input createSensor_Input(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SENSOR_INPUT, DefaultSensor_Input.class);
    }

    /**
     * Gets an instance of type Sensor_Input with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Sensor_Input getSensor_Input(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SENSOR_INPUT, DefaultSensor_Input.class);
    }

    /**
     * Gets all instances of Sensor_Input from the ontology.
     */
    public Collection<? extends Sensor_Input> getAllSensor_InputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SENSOR_INPUT, DefaultSensor_Input.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#SensorOutput
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#SensorOutput", Sensor_Output.class, DefaultSensor_Output.class);
    }

    /**
     * Creates an instance of type Sensor_Output.  Modifies the underlying ontology.
     */
    public Sensor_Output createSensor_Output(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SENSOR_OUTPUT, DefaultSensor_Output.class);
    }

    /**
     * Gets an instance of type Sensor_Output with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Sensor_Output getSensor_Output(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SENSOR_OUTPUT, DefaultSensor_Output.class);
    }

    /**
     * Gets all instances of Sensor_Output from the ontology.
     */
    public Collection<? extends Sensor_Output> getAllSensor_OutputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SENSOR_OUTPUT, DefaultSensor_Output.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#Stimulus
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#Stimulus", Stimulus.class, DefaultStimulus.class);
    }

    /**
     * Creates an instance of type Stimulus.  Modifies the underlying ontology.
     */
    public Stimulus createStimulus(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_STIMULUS, DefaultStimulus.class);
    }

    /**
     * Gets an instance of type Stimulus with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Stimulus getStimulus(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_STIMULUS, DefaultStimulus.class);
    }

    /**
     * Gets all instances of Stimulus from the ontology.
     */
    public Collection<? extends Stimulus> getAllStimulusInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_STIMULUS, DefaultStimulus.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#SurvivalProperty
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#SurvivalProperty", Survival_Property.class, DefaultSurvival_Property.class);
    }

    /**
     * Creates an instance of type Survival_Property.  Modifies the underlying ontology.
     */
    public Survival_Property createSurvival_Property(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SURVIVAL_PROPERTY, DefaultSurvival_Property.class);
    }

    /**
     * Gets an instance of type Survival_Property with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Survival_Property getSurvival_Property(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SURVIVAL_PROPERTY, DefaultSurvival_Property.class);
    }

    /**
     * Gets all instances of Survival_Property from the ontology.
     */
    public Collection<? extends Survival_Property> getAllSurvival_PropertyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SURVIVAL_PROPERTY, DefaultSurvival_Property.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#SurvivalRange
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#SurvivalRange", Survival_Range.class, DefaultSurvival_Range.class);
    }

    /**
     * Creates an instance of type Survival_Range.  Modifies the underlying ontology.
     */
    public Survival_Range createSurvival_Range(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SURVIVAL_RANGE, DefaultSurvival_Range.class);
    }

    /**
     * Gets an instance of type Survival_Range with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Survival_Range getSurvival_Range(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SURVIVAL_RANGE, DefaultSurvival_Range.class);
    }

    /**
     * Gets all instances of Survival_Range from the ontology.
     */
    public Collection<? extends Survival_Range> getAllSurvival_RangeInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SURVIVAL_RANGE, DefaultSurvival_Range.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#System
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#System", System.class, DefaultSystem.class);
    }

    /**
     * Creates an instance of type System.  Modifies the underlying ontology.
     */
    public br.com.semanticwot.pswot.cloud.ssn.System createSystem(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SYSTEM, DefaultSystem.class);
    }

    /**
     * Gets an instance of type System with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public br.com.semanticwot.pswot.cloud.ssn.System getSystem(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SYSTEM, DefaultSystem.class);
    }

    /**
     * Gets all instances of System from the ontology.
     */
    public Collection<? extends br.com.semanticwot.pswot.cloud.ssn.System> getAllSystemInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SYSTEM, DefaultSystem.class);
    }


    /* ***************************************************
     * Class http://purl.oclc.org/NET/ssnx/ssn#SystemLifetime
     */

    {
        javaMapping.add("http://purl.oclc.org/NET/ssnx/ssn#SystemLifetime", System_Lifetime.class, DefaultSystem_Lifetime.class);
    }

    /**
     * Creates an instance of type System_Lifetime.  Modifies the underlying ontology.
     */
    public System_Lifetime createSystem_Lifetime(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SYSTEM_LIFETIME, DefaultSystem_Lifetime.class);
    }

    /**
     * Gets an instance of type System_Lifetime with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public System_Lifetime getSystem_Lifetime(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SYSTEM_LIFETIME, DefaultSystem_Lifetime.class);
    }

    /**
     * Gets all instances of System_Lifetime from the ontology.
     */
    public Collection<? extends System_Lifetime> getAllSystem_LifetimeInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SYSTEM_LIFETIME, DefaultSystem_Lifetime.class);
    }


    /* ***************************************************
     * Class http://www.loa-cnr.it/ontologies/DUL.owl#DesignedArtifact
     */

    {
        javaMapping.add("http://www.loa-cnr.it/ontologies/DUL.owl#DesignedArtifact", Designed_artifact.class, DefaultDesigned_artifact.class);
    }

    /**
     * Creates an instance of type Designed_artifact.  Modifies the underlying ontology.
     */
    public Designed_artifact createDesigned_artifact(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DESIGNED_ARTIFACT, DefaultDesigned_artifact.class);
    }

    /**
     * Gets an instance of type Designed_artifact with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Designed_artifact getDesigned_artifact(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DESIGNED_ARTIFACT, DefaultDesigned_artifact.class);
    }

    /**
     * Gets all instances of Designed_artifact from the ontology.
     */
    public Collection<? extends Designed_artifact> getAllDesigned_artifactInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DESIGNED_ARTIFACT, DefaultDesigned_artifact.class);
    }


    /* ***************************************************
     * Class http://www.loa-cnr.it/ontologies/DUL.owl#Event
     */

    {
        javaMapping.add("http://www.loa-cnr.it/ontologies/DUL.owl#Event", Event.class, DefaultEvent.class);
    }

    /**
     * Creates an instance of type Event.  Modifies the underlying ontology.
     */
    public Event createEvent(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_EVENT, DefaultEvent.class);
    }

    /**
     * Gets an instance of type Event with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Event getEvent(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_EVENT, DefaultEvent.class);
    }

    /**
     * Gets all instances of Event from the ontology.
     */
    public Collection<? extends Event> getAllEventInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_EVENT, DefaultEvent.class);
    }


    /* ***************************************************
     * Class http://www.loa-cnr.it/ontologies/DUL.owl#InformationObject
     */

    {
        javaMapping.add("http://www.loa-cnr.it/ontologies/DUL.owl#InformationObject", Information_object.class, DefaultInformation_object.class);
    }

    /**
     * Creates an instance of type Information_object.  Modifies the underlying ontology.
     */
    public Information_object createInformation_object(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_INFORMATION_OBJECT, DefaultInformation_object.class);
    }

    /**
     * Gets an instance of type Information_object with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Information_object getInformation_object(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_INFORMATION_OBJECT, DefaultInformation_object.class);
    }

    /**
     * Gets all instances of Information_object from the ontology.
     */
    public Collection<? extends Information_object> getAllInformation_objectInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_INFORMATION_OBJECT, DefaultInformation_object.class);
    }


    /* ***************************************************
     * Class http://www.loa-cnr.it/ontologies/DUL.owl#Method
     */

    {
        javaMapping.add("http://www.loa-cnr.it/ontologies/DUL.owl#Method", Method.class, DefaultMethod.class);
    }

    /**
     * Creates an instance of type Method.  Modifies the underlying ontology.
     */
    public Method createMethod(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_METHOD, DefaultMethod.class);
    }

    /**
     * Gets an instance of type Method with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Method getMethod(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_METHOD, DefaultMethod.class);
    }

    /**
     * Gets all instances of Method from the ontology.
     */
    public Collection<? extends Method> getAllMethodInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_METHOD, DefaultMethod.class);
    }


    /* ***************************************************
     * Class http://www.loa-cnr.it/ontologies/DUL.owl#Object
     */

    {
        javaMapping.add("http://www.loa-cnr.it/ontologies/DUL.owl#Object", Object.class, DefaultObject.class);
    }

    /**
     * Creates an instance of type Object.  Modifies the underlying ontology.
     */
    public Object createObject(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_OBJECT, DefaultObject.class);
    }

    /**
     * Gets an instance of type Object with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Object getObject(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_OBJECT, DefaultObject.class);
    }

    /**
     * Gets all instances of Object from the ontology.
     */
    public Collection<? extends Object> getAllObjectInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_OBJECT, DefaultObject.class);
    }


    /* ***************************************************
     * Class http://www.loa-cnr.it/ontologies/DUL.owl#PhysicalObject
     */

    {
        javaMapping.add("http://www.loa-cnr.it/ontologies/DUL.owl#PhysicalObject", Physical_object.class, DefaultPhysical_object.class);
    }

    /**
     * Creates an instance of type Physical_object.  Modifies the underlying ontology.
     */
    public Physical_object createPhysical_object(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PHYSICAL_OBJECT, DefaultPhysical_object.class);
    }

    /**
     * Gets an instance of type Physical_object with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Physical_object getPhysical_object(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PHYSICAL_OBJECT, DefaultPhysical_object.class);
    }

    /**
     * Gets all instances of Physical_object from the ontology.
     */
    public Collection<? extends Physical_object> getAllPhysical_objectInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PHYSICAL_OBJECT, DefaultPhysical_object.class);
    }


    /* ***************************************************
     * Class http://www.loa-cnr.it/ontologies/DUL.owl#Process
     */

    {
        javaMapping.add("http://www.loa-cnr.it/ontologies/DUL.owl#Process", Process.class, DefaultProcess.class);
    }

    /* ***************************************************
     * Class http://www.loa-cnr.it/ontologies/DUL.owl#Quality
     */

    {
        javaMapping.add("http://www.loa-cnr.it/ontologies/DUL.owl#Quality", Quality.class, DefaultQuality.class);
    }

    /**
     * Creates an instance of type Quality.  Modifies the underlying ontology.
     */
    public Quality createQuality(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_QUALITY, DefaultQuality.class);
    }

    /**
     * Gets an instance of type Quality with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Quality getQuality(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_QUALITY, DefaultQuality.class);
    }

    /**
     * Gets all instances of Quality from the ontology.
     */
    public Collection<? extends Quality> getAllQualityInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_QUALITY, DefaultQuality.class);
    }


    /* ***************************************************
     * Class http://www.loa-cnr.it/ontologies/DUL.owl#Region
     */

    {
        javaMapping.add("http://www.loa-cnr.it/ontologies/DUL.owl#Region", Region.class, DefaultRegion.class);
    }

    /**
     * Creates an instance of type Region.  Modifies the underlying ontology.
     */
    public Region createRegion(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REGION, DefaultRegion.class);
    }

    /**
     * Gets an instance of type Region with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Region getRegion(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REGION, DefaultRegion.class);
    }

    /**
     * Gets all instances of Region from the ontology.
     */
    public Collection<? extends Region> getAllRegionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REGION, DefaultRegion.class);
    }


    /* ***************************************************
     * Class http://www.loa-cnr.it/ontologies/DUL.owl#Situation
     */

    {
        javaMapping.add("http://www.loa-cnr.it/ontologies/DUL.owl#Situation", Situation.class, DefaultSituation.class);
    }

    /**
     * Creates an instance of type Situation.  Modifies the underlying ontology.
     */
    public Situation createSituation(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SITUATION, DefaultSituation.class);
    }

    /**
     * Gets an instance of type Situation with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Situation getSituation(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SITUATION, DefaultSituation.class);
    }

    /**
     * Gets all instances of Situation from the ontology.
     */
    public Collection<? extends Situation> getAllSituationInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SITUATION, DefaultSituation.class);
    }


}
